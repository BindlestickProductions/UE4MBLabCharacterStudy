#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.20
#  in conjunction with Tcl version 8.6
#    Feb 15, 2019 09:43:01 PM IST  platform: Windows NT
#    Feb 15, 2019 09:49:42 PM IST  platform: Windows NT

import sys
from pathlib import Path
import pyperclip
import mimetypes

replacements = [['etc','phoneme_t_01'],['rest','Default'],['AI','phoneme_a_01'],['E','phoneme_k_01'],['FV','phoneme_f_01'],['L','Default'],['MBP','phoneme_m_01'],['O','phoneme_o_01'],['U','phoneme_u_01,phoneme_w_01'],['WQ','phoneme_w_01']]

try:
    import Tkinter as tk
    from Tkinter import filedialog
except ImportError:
    import tkinter as tk
    from tkinter import filedialog
try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True


class CustomText(tk.Text):
    def __init__(self, *args, **kwargs):
        """A text widget that report on internal widget commands"""
        tk.Text.__init__(self, *args, **kwargs)

        # create a proxy for the underlying widget
        self._orig = self._w + "_orig"
        self.tk.call("rename", self._w, self._orig)
        self.tk.createcommand(self._w, self._proxy)

    def _proxy(self, command, *args):
        cmd = (self._orig, command) + args
        result = self.tk.call(cmd)

        if command in ("insert", "delete", "replace"):
            self.event_generate("<<TextModified>>")

        return result

def about():
    print('fblahTools_support.about')
    sys.stdout.flush()
    global root
    window = tk.Toplevel(root)
    window.geometry("220x90+567+509")
    frame = tk.Frame(window)
    frame.place(relx=0.017, rely=0.103, relheight=0.9
                , relwidth=0.975)
    frame.configure(relief='groove')
    frame.configure(borderwidth="2")
    frame.configure(background="#d9d9d9")
    frame.configure(highlightbackground="#d9d9d9")
    frame.configure(highlightcolor="black")
    label = tk.Label(frame)
    label.place(relx=0.0, rely=0.026, height=21, width=162)
    label.configure(activebackground="#f9f9f9")
    label.configure(activeforeground="black")
    label.configure(background="#d9d9d9")
    label.configure(disabledforeground="#a3a3a3")
    label.configure(foreground="#000000")
    label.configure(highlightbackground="#d9d9d9")
    label.configure(highlightcolor="black")
    label.configure(text='''fBlah's Tools v1.0''')

def onModification(event):
    global replacements
    temp = event.widget.get("1.0", "end-1c").split("\n")
    temp2 = []
    for r in temp:
        t = r.split("|")        
        if(len(t)==2):
            temp2.append(t)
    if(len(temp2)):
        replacements = temp2

def replace():
    print('fblahTools_support.replacements')
    sys.stdout.flush()
    global root
    window = tk.Toplevel(root)
    window.geometry("320x600+567+509")
    frame = tk.LabelFrame(window)
    frame.place(relx=0.017, rely=0.01, relheight=0.98
                , relwidth=0.975)
    frame.configure(relief='groove')
    frame.configure(foreground="black")
    frame.configure(text='''Replacements''')
    frame.configure(background="#d9d9d9")
    frame.configure(highlightbackground="#d9d9d9")
    frame.configure(highlightcolor="black")
    text1 = CustomText(frame)
    text1.place(relx=0.018, rely=0.05, relheight=0.94, relwidth=0.953
            , bordermode='ignore')
    text1.configure(background="white")
    text1.configure(font="TkTextFont")
    text1.configure(foreground="black")
    text1.configure(highlightbackground="#d9d9d9")
    text1.configure(highlightcolor="black")
    text1.configure(insertbackground="black")
    text1.configure(selectbackground="#c4c4c4")
    text1.configure(selectforeground="black")    
    text1.configure(wrap='word')
    
    output = ""
    for word in replacements:
        output += word[0] + "|" + word[1] + "\n"
    output = output[:-1]
    text1.delete('1.0','end')
    text1.insert('1.0',output)
    text1.bind("<<TextModified>>", onModification)

def close():
    print('fblahTools_support.close')
    sys.stdout.flush()
    global root
    root.quit()

def browse():
    print('fblahTools_support.browse')
    global w 
    filename = filedialog.askopenfilename()
    
    w.Entry1.delete(0,'end')
    w.Entry1.insert(0,filename)
    print(w.Entry1.get())
    sys.stdout.flush()    

def convert():
    global w
    print('fblahTools_support.convert')
    sys.stdout.flush()    
    datafile = Path(w.Entry1.get())    
    if(datafile.is_file()):
        mime = mimetypes.guess_type(w.Entry1.get())
        print(mime[0])
        if(mime[0] is None or mime[0][0:5] == "text/"):
            data = open(w.Entry1.get())
            output = ""
            isValid = False
            for i, line in enumerate(data):
                print(line)
                if(i == 0):
                    if(line.find("MohoSwitch1") is not -1):
                        isValid = True    
                elif(isValid):
                    temp = line
                    for word in replacements:
                        temp = temp.replace(word[0],word[1])
                    #temp = line.split("\n")
                    output += temp# + "|"
                else:                
                    break        
            data.close()
            print(output)
            w.Text1.delete('1.0','end')
            w.Text1.insert('1.0',output)
        else:
            w.Text1.delete('1.0','end')
            w.Text1.insert('1.0','Could not recognize file contents')
    else:
        w.Text1.delete('1.0','end')
        w.Text1.insert('1.0','The file is invalid please re export using "Anime Studio" preset in papagayo')

def copy():
    print('fblahTools_support.copy')
    sys.stdout.flush()
    pyperclip.copy(w.Text1.get(1.0, "end-1c"))
    
def make_one_line():
    print('fblahTools_support.make_one_line')
    sys.stdout.flush()
    global w
    output = ""
    temp = w.Text1.get(1.0, "end-1c").split("\n")[:-1]
    for item in temp:    
        output += item + "|"
    w.Text1.delete('1.0','end')
    w.Text1.insert('1.0',output)

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import fblahTools
    fblahTools.vp_start_gui()





